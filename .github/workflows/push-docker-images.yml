name: Docker Image Push

on:
  push:
    paths-ignore:
      - '.github/**'
      - 'dags/**'
      - 'README.md'
      - '.gitignore'
    branches: [ "main" ]

jobs:

  build-air-quality-and-push:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Build Docker Image (air_quality)
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build . --file ./containers/air_quality/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:air_quality
          docker push ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:air_quality

  build-city-coordinates-and-push:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Build Docker Image (city_coordinates)
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build . --file ./containers/coordinates/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_coordinates
          docker push ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_coordinates

  build-country-statistics-and-push:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Build Docker Image (country_statistics)
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build . --file ./containers/countries/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:country_statistics
          docker push ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:country_statistics

  build-city-weather-and-push:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Build Docker Image (city_weather)
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build . --file ./containers/weather/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_weather
          docker push ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_weather

  build-city-population-and-push:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3
    - name: Build Docker Image (city_population)
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build . --file ./containers/population/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_population
          docker push ${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:city_population       

  # scan:
  #   runs-on: ubuntu-latest
  #   needs: [build-air-quality, build-city-coordinates, build-country-statistics, build-city-weather, build-city-population]
  #   steps:
        
  #   - name: Scan image
  #     uses: anchore/scan-action@v3
  #     with:
  #       image: "${{ secrets.DOCKER_USERNAME }}/global-data-pipeline:air_quality"
  #       fail-build: false
    #     fail-build: true
    #     severity-cutoff: critical
